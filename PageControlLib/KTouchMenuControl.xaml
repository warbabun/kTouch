<UserControl
	xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
	xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
	xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
	xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
	xmlns:ec="http://schemas.microsoft.com/expression/2010/controls"
	xmlns:Surface="http://schemas.microsoft.com/surface/2008"
	mc:Ignorable="d"
	x:Class="KTouch.Controls.KTouchMenuControl"
	x:Name="UserControl"
	Margin="-32.1,-32.1,0,0"
	d:DesignWidth="640" d:DesignHeight="480">

    <UserControl.Resources>

        <!-- Button animations -->
        <Storyboard x:Key="LabelIn" FillBehavior="Stop">
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="overState">
                <EasingDoubleKeyFrame KeyTime="0" Value="0"/>
                <EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="1"/>
                <EasingDoubleKeyFrame KeyTime="0:0:2" Value="1"/>
            </DoubleAnimationUsingKeyFrames>
        </Storyboard>
        <Storyboard x:Key="LabelOut">
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="overState">
                <EasingDoubleKeyFrame KeyTime="0" Value="1"/>
                <EasingDoubleKeyFrame KeyTime="0:0:2.0" Value="1"/>
                <EasingDoubleKeyFrame KeyTime="0:0:2.5" Value="0"/>
            </DoubleAnimationUsingKeyFrames>
        </Storyboard>
        <!--<Storyboard x:Key="ButtonHold">
			<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="innerEllipse">
				<EasingDoubleKeyFrame KeyTime="0" Value="1">
					<EasingDoubleKeyFrame.EasingFunction>
						<ExponentialEase EasingMode="EaseIn"/>
					</EasingDoubleKeyFrame.EasingFunction>
				</EasingDoubleKeyFrame>
				<EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="0">
					<EasingDoubleKeyFrame.EasingFunction>
						<ExponentialEase EasingMode="EaseIn"/>
					</EasingDoubleKeyFrame.EasingFunction>
				</EasingDoubleKeyFrame>
			</DoubleAnimationUsingKeyFrames>
		</Storyboard>

		<Storyboard x:Key="LabelInAndOut">
			<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)"  Storyboard.TargetName="overState">
				<EasingDoubleKeyFrame KeyTime="1" Value="0"/>
				<EasingDoubleKeyFrame KeyTime="0:0:1.4" Value="1"/>
				<EasingDoubleKeyFrame KeyTime="0:0:3.4" Value="1"/>
				<EasingDoubleKeyFrame KeyTime="0:0:3.8" Value="0"/>
			</DoubleAnimationUsingKeyFrames>
		</Storyboard>-->

        <!-- PathListBox animations-->
        <Storyboard x:Key="MenuLoaded">
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(ec:PathListBox.LayoutPaths)[0].(ec:LayoutPath.Padding)" Storyboard.TargetName="pathListBox">
                <EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="-80"/>
                <EasingDoubleKeyFrame KeyTime="0:0:0.175" Value="-80"/>
                <EasingDoubleKeyFrame KeyTime="0:0:0.25" Value="-70"/>
                <EasingDoubleKeyFrame KeyTime="0:0:0.7" Value="0"/>
            </DoubleAnimationUsingKeyFrames>
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(ec:PathListBox.LayoutPaths)[0].(ec:LayoutPath.Start)" Storyboard.TargetName="pathListBox">
                <EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="0.75"/>
                <EasingDoubleKeyFrame KeyTime="0:0:0.175" Value="0.9"/>
                <EasingDoubleKeyFrame KeyTime="0:0:0.25" Value="0.945"/>
            </DoubleAnimationUsingKeyFrames>
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)" Storyboard.TargetName="homeBtn">
                <SplineDoubleKeyFrame KeyTime="0" Value="1"/>
                <SplineDoubleKeyFrame KeyTime="0:0:0.4" Value="0.1" KeySpline="1,0.5,1,0.04"/>
                <SplineDoubleKeyFrame KeyTime="0:0:0.5" Value="0.5" KeySpline="1,0.5,1,0.04"/>
                <SplineDoubleKeyFrame KeyTime="0:0:0.6" Value="1" KeySpline="1,0.5,1,0.04"/>
            </DoubleAnimationUsingKeyFrames>
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleY)" Storyboard.TargetName="homeBtn">
                <SplineDoubleKeyFrame KeyTime="0" Value="1"/>
                <SplineDoubleKeyFrame KeyTime="0:0:0.4" Value="0.1" KeySpline="1,0.5,1,0.04"/>
                <SplineDoubleKeyFrame KeyTime="0:0:0.5" Value="0.5" KeySpline="1,0.5,1,0.04"/>
                <SplineDoubleKeyFrame KeyTime="0:0:0.6" Value="1" KeySpline="1,0.5,1,0.04"/>
            </DoubleAnimationUsingKeyFrames>
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="homeBtn">
                <EasingDoubleKeyFrame KeyTime="0" Value="1"/>
                <EasingDoubleKeyFrame KeyTime="0:0:0.4" Value="0.495"/>
                <EasingDoubleKeyFrame KeyTime="0:0:0.5" Value="0.75"/>
                <EasingDoubleKeyFrame KeyTime="0:0:0.6" Value="1"/>
            </DoubleAnimationUsingKeyFrames>
            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="homeBtn">
                <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Hidden}"/>
                <DiscreteObjectKeyFrame KeyTime="0:0:0.4" Value="{x:Static Visibility.Visible}"/>
            </ObjectAnimationUsingKeyFrames>
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)" Storyboard.TargetName="solutionsBtn">
                <SplineDoubleKeyFrame KeyTime="0" Value="1"/>
                <SplineDoubleKeyFrame KeyTime="0:0:0.35" Value="0.1" KeySpline="1,0.5,1,0.04"/>
                <SplineDoubleKeyFrame KeyTime="0:0:0.45" Value="0.5" KeySpline="1,0.5,1,0.04"/>
                <SplineDoubleKeyFrame KeyTime="0:0:0.55" Value="1" KeySpline="1,0.5,1,0.04"/>
            </DoubleAnimationUsingKeyFrames>
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleY)" Storyboard.TargetName="solutionsBtn">
                <SplineDoubleKeyFrame KeyTime="0" Value="1"/>
                <SplineDoubleKeyFrame KeyTime="0:0:0.35" Value="0.1" KeySpline="1,0.5,1,0.04"/>
                <SplineDoubleKeyFrame KeyTime="0:0:0.45" Value="0.5" KeySpline="1,0.5,1,0.04"/>
                <SplineDoubleKeyFrame KeyTime="0:0:0.55" Value="1" KeySpline="1,0.5,1,0.04"/>
            </DoubleAnimationUsingKeyFrames>
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="solutionsBtn">
                <EasingDoubleKeyFrame KeyTime="0" Value="1"/>
                <EasingDoubleKeyFrame KeyTime="0:0:0.35" Value="0.495"/>
                <EasingDoubleKeyFrame KeyTime="0:0:0.45" Value="0.75"/>
                <EasingDoubleKeyFrame KeyTime="0:0:0.55" Value="1"/>
            </DoubleAnimationUsingKeyFrames>
            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="solutionsBtn">
                <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Hidden}"/>
                <DiscreteObjectKeyFrame KeyTime="0:0:0.35">
                    <DiscreteObjectKeyFrame.Value>
                        <Visibility>Visible</Visibility>
                    </DiscreteObjectKeyFrame.Value>
                </DiscreteObjectKeyFrame>
            </ObjectAnimationUsingKeyFrames>
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)" Storyboard.TargetName="realisationsBtn">
                <SplineDoubleKeyFrame KeyTime="0" Value="1"/>
                <SplineDoubleKeyFrame KeyTime="0:0:0.3" Value="0.1" KeySpline="1,0.5,1,0.04"/>
                <SplineDoubleKeyFrame KeyTime="0:0:0.4" Value="0.5" KeySpline="1,0.5,1,0.04"/>
                <SplineDoubleKeyFrame KeyTime="0:0:0.5" Value="1" KeySpline="1,0.5,1,0.04"/>
            </DoubleAnimationUsingKeyFrames>
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleY)" Storyboard.TargetName="realisationsBtn">
                <SplineDoubleKeyFrame KeyTime="0" Value="1"/>
                <SplineDoubleKeyFrame KeyTime="0:0:0.3" Value="0.1" KeySpline="1,0.5,1,0.04"/>
                <SplineDoubleKeyFrame KeyTime="0:0:0.4" Value="0.5" KeySpline="1,0.5,1,0.04"/>
                <SplineDoubleKeyFrame KeyTime="0:0:0.5" Value="1" KeySpline="1,0.5,1,0.04"/>
            </DoubleAnimationUsingKeyFrames>
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="realisationsBtn">
                <EasingDoubleKeyFrame KeyTime="0" Value="1"/>
                <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="0.495"/>
                <EasingDoubleKeyFrame KeyTime="0:0:0.4" Value="0.75"/>
                <EasingDoubleKeyFrame KeyTime="0:0:0.5" Value="1"/>
            </DoubleAnimationUsingKeyFrames>
            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="realisationsBtn">
                <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Hidden}"/>
                <DiscreteObjectKeyFrame KeyTime="0:0:0.3">
                    <DiscreteObjectKeyFrame.Value>
                        <Visibility>Visible</Visibility>
                    </DiscreteObjectKeyFrame.Value>
                </DiscreteObjectKeyFrame>
            </ObjectAnimationUsingKeyFrames>
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)" Storyboard.TargetName="internshipBtn">
                <SplineDoubleKeyFrame KeyTime="0" Value="1"/>
                <SplineDoubleKeyFrame KeyTime="0:0:0.25" Value="0.1" KeySpline="0.99,0.5,1,0.04"/>
                <SplineDoubleKeyFrame KeyTime="0:0:0.35" Value="0.5" KeySpline="0.99,0.5,1,0.04"/>
                <SplineDoubleKeyFrame KeyTime="0:0:0.45" Value="1" KeySpline="0.99,0.5,1,0.04"/>
            </DoubleAnimationUsingKeyFrames>
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleY)" Storyboard.TargetName="internshipBtn">
                <SplineDoubleKeyFrame KeyTime="0" Value="1"/>
                <SplineDoubleKeyFrame KeyTime="0:0:0.25" Value="0.1" KeySpline="0.99,0.5,1,0.04"/>
                <SplineDoubleKeyFrame KeyTime="0:0:0.35" Value="0.5" KeySpline="0.99,0.5,1,0.04"/>
                <SplineDoubleKeyFrame KeyTime="0:0:0.45" Value="1" KeySpline="0.99,0.5,1,0.04"/>
            </DoubleAnimationUsingKeyFrames>
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="internshipBtn">
                <EasingDoubleKeyFrame KeyTime="0" Value="1"/>
                <EasingDoubleKeyFrame KeyTime="0:0:0.25" Value="0.495"/>
                <EasingDoubleKeyFrame KeyTime="0:0:0.35" Value="0.75"/>
                <EasingDoubleKeyFrame KeyTime="0:0:0.45" Value="1"/>
            </DoubleAnimationUsingKeyFrames>
            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="internshipBtn">
                <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Hidden}"/>
                <DiscreteObjectKeyFrame KeyTime="0:0:0.25">
                    <DiscreteObjectKeyFrame.Value>
                        <Visibility>Visible</Visibility>
                    </DiscreteObjectKeyFrame.Value>
                </DiscreteObjectKeyFrame>
            </ObjectAnimationUsingKeyFrames>
        </Storyboard>

        <!-- Generic style for all TextBlocks -->
        <Style TargetType="TextBlock" x:Key="TextBlockStyle">
            <Setter Property="Foreground" Value="#FFB30404"/>
            <Setter Property="FontSize" Value="17"/>
            <Setter Property="FontFamily" Value="DIN-Light"/>
            <Setter Property="IsHyphenationEnabled" Value="True"/>
            <Setter Property="LineStackingStrategy" Value="BlockLineHeight"/>
            <Setter Property="VerticalAlignment" Value="Bottom"/>
            <Setter Property="HorizontalAlignment" Value="Right"/>
            <Setter Property="LineHeight" Value="17"/>
            <Setter Property="TextAlignment" Value="Left"/>
            <Setter Property="TextWrapping" Value="Wrap"/>
            <Setter Property="Opacity" Value="{Binding Opacity, ElementName=overState}"/>
        </Style>

        <!-- Generic style for all buttons -->
        <Style TargetType="Surface:SurfaceButton" x:Key="GenericButtonStyle">
            <Setter Property="Height" Value="80"/>
            <Setter Property="Width" Value="80"/>
            <Setter Property="Stylus.IsPressAndHoldEnabled" Value="False"/>
            <Setter Property="RenderTransform">
                <Setter.Value>
                    <TransformGroup>
                        <ScaleTransform/>
                        <SkewTransform/>
                        <RotateTransform/>
                        <TranslateTransform/>
                    </TransformGroup>
                </Setter.Value>
            </Setter>
        </Style>
        
        <!-- HomeButton -->
        <Style x:Key="HomeButtonStyle" TargetType="{x:Type Surface:SurfaceButton}" BasedOn="{StaticResource GenericButtonStyle}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Surface:SurfaceButton}">
                        <Grid>
                            <Image x:Name="outerEllipse" 
                                   Source="/KTouch.Controls;component/Themes/Resources/KTouchMenuRes/pictos accueil etat_OFF.png" 
                                   HorizontalAlignment="Center"/>
                            
                            <Image x:Name="overState" 
                                   Source="/KTouch.Controls;component/Themes/Resources/KTouchMenuRes/accueil_etat_OVER.png" 
                                   Margin="-0.6,0.733,2.6,-68.734" 
                                   Opacity="0"/>
                            
                            <TextBlock x:Name="accueil" Text="accueil" Margin="0,0,-18.81,-12.646" Style="{DynamicResource TextBlockStyle}">
								<TextBlock.RenderTransform>
									<TransformGroup>
										<ScaleTransform/>
										<SkewTransform/>
										<RotateTransform Angle="102.624"/>
										<TranslateTransform/>
									</TransformGroup>
								</TextBlock.RenderTransform>
                            </TextBlock>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <EventTrigger RoutedEvent="Touch.TouchEnter">
                                <BeginStoryboard Storyboard="{StaticResource LabelIn}"/>
                            </EventTrigger>
                            <DataTrigger Binding="{Binding IsSelected, RelativeSource={RelativeSource AncestorType={x:Type ListBoxItem}}}" Value="True">
                                <DataTrigger.EnterActions>
                                    <BeginStoryboard Storyboard="{StaticResource LabelOut}"/>
                                </DataTrigger.EnterActions>
                                <Setter TargetName="outerEllipse" Property="Source" Value="/KTouch.Controls;component/Themes/Resources/KTouchMenuRes/pictos accueil etat_ON.png"/>
                            </DataTrigger>
                            <DataTrigger Binding="{Binding IsSelected, RelativeSource={RelativeSource AncestorType={x:Type ListBoxItem}}}" Value="False">
                                <Setter TargetName="outerEllipse" Property="Source" Value="/KTouch.Controls;component/Themes/Resources/KTouchMenuRes/pictos accueil etat_OFF.png"/>
                            </DataTrigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- SolutionsButton -->
        <Style x:Key="SolutionsBtnStyle" TargetType="{x:Type Surface:SurfaceButton}" BasedOn="{StaticResource GenericButtonStyle}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Surface:SurfaceButton}">
                        <Grid>
                            <Image x:Name="outerEllipse" Source="/KTouch.Controls;component/Themes/Resources/KTouchMenuRes/pictos solutions etat_OFF.png"/>
                            <Image x:Name="overState" 
                                   Source="/KTouch.Controls;component/Themes/Resources/KTouchMenuRes/solutions_etat_OVER.png" 
                                   Margin="0,0,-43,-68"
                                   Opacity="0"/>
                            
                            <TextBlock x:Name="solutions" Text="solutions" Margin="0,0,-55,0" Style="{DynamicResource TextBlockStyle}">
								<TextBlock.RenderTransform>
									<TransformGroup>
										<ScaleTransform/>
										<SkewTransform/>
										<RotateTransform Angle="56.17"/>
										<TranslateTransform/>
									</TransformGroup>
								</TextBlock.RenderTransform>
                            </TextBlock>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <EventTrigger RoutedEvent="Touch.TouchEnter">
                                <BeginStoryboard Storyboard="{StaticResource LabelIn}"/>
                            </EventTrigger>
                            <DataTrigger Binding="{Binding IsSelected, RelativeSource={RelativeSource AncestorType={x:Type ListBoxItem}}}" Value="True">
                                <DataTrigger.EnterActions>
                                    <BeginStoryboard Storyboard="{StaticResource LabelOut}"/>
                                </DataTrigger.EnterActions>
                                <Setter TargetName="outerEllipse" Property="Source" Value="/KTouch.Controls;component/Themes/Resources/KTouchMenuRes/pictos solutions etat_ON.png"/>
                            </DataTrigger>
                            <DataTrigger Binding="{Binding IsSelected, RelativeSource={RelativeSource AncestorType={x:Type ListBoxItem}}}" Value="False">
                                <Setter TargetName="outerEllipse" Property="Source" Value="/KTouch.Controls;component/Themes/Resources/KTouchMenuRes/pictos solutions etat_OFF.png"/>
                            </DataTrigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- RealisationButton -->
        <Style x:Key="RealisationsButtonStyle" TargetType="{x:Type Surface:SurfaceButton}" BasedOn="{StaticResource GenericButtonStyle}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Surface:SurfaceButton}">
                        <Grid>
                            <Image x:Name="outerEllipse" 
								   Source="/KTouch.Controls;component/Themes/Resources/KTouchMenuRes/pictos réalisations etat_OFF.png" 
								   Width="{TemplateBinding Width}" 
								   Height="{TemplateBinding Width}"/>

                            <Image x:Name="overState" 
								   Source="/KTouch.Controls;component/Themes/Resources/KTouchMenuRes/realisations_etat_OVER.png" 
								   Margin="0,0,-100,-31" 
								   Opacity="0"/>
                            <TextBlock x:Name="réalisations_copie" Text="réalisations" Margin="0,0,-85.074,16.593" Style="{DynamicResource TextBlockStyle}">
								<TextBlock.RenderTransform>
									<TransformGroup>
										<ScaleTransform ScaleY="0.929" ScaleX="0.929"/>
										<SkewTransform/>
										<RotateTransform Angle="23.383"/>
										<TranslateTransform/>
									</TransformGroup>
								</TextBlock.RenderTransform>
                            </TextBlock>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <EventTrigger RoutedEvent="Touch.TouchEnter">
                                <BeginStoryboard Storyboard="{StaticResource LabelIn}"/>
                            </EventTrigger>
                            <DataTrigger Binding="{Binding IsSelected, RelativeSource={RelativeSource AncestorType={x:Type ListBoxItem}}}" Value="True">
                                <DataTrigger.EnterActions>
                                    <BeginStoryboard Storyboard="{StaticResource LabelOut}"/>
                                </DataTrigger.EnterActions>
                                <Setter TargetName="outerEllipse" Property="Source" Value="/KTouch.Controls;component/Themes/Resources/KTouchMenuRes/pictos réalisations etat_ON.png"/>
                            </DataTrigger>
                            <DataTrigger Binding="{Binding IsSelected, RelativeSource={RelativeSource AncestorType={x:Type ListBoxItem}}}" Value="False">
                                <Setter TargetName="outerEllipse" Property="Source" Value="/KTouch.Controls;component/Themes/Resources/KTouchMenuRes/pictos réalisations etat_OFF.png"/>
                            </DataTrigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
               
        <!-- InternshipButton -->
        <Style x:Key="StagesBtnStyle" TargetType="{x:Type Surface:SurfaceButton}" BasedOn="{StaticResource GenericButtonStyle}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Surface:SurfaceButton}">
                        <Grid>
                            <Image x:Name="outerEllipse" 
                                   Source="/KTouch.Controls;component/Themes/Resources/KTouchMenuRes/pictos stage etat_OFF.png"/>
                            
                            <Image x:Name="overState" 
                                   Source="/KTouch.Controls;component/Themes/Resources/KTouchMenuRes/stages_etat_OVER.png" 
                                   Margin="0,0,-65,0.5" 
                                   Opacity="0"/>

                            <TextBlock x:Name="stages" Text="stages" Margin="0,26.665,-39.536,33.333" Style="{DynamicResource TextBlockStyle}">
								<TextBlock.RenderTransform>
									<TransformGroup>
										<ScaleTransform ScaleX="1"/>
										<SkewTransform/>
										<RotateTransform Angle="-7.71"/>
										<TranslateTransform/>
									</TransformGroup>
								</TextBlock.RenderTransform>
                            </TextBlock>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <EventTrigger RoutedEvent="Touch.TouchEnter">
                                <BeginStoryboard Storyboard="{StaticResource LabelIn}"/>
                            </EventTrigger>
                            <DataTrigger Binding="{Binding IsSelected, RelativeSource={RelativeSource AncestorType={x:Type ListBoxItem}}}" Value="True">
                                <DataTrigger.EnterActions>
                                    <BeginStoryboard Storyboard="{StaticResource LabelOut}"/>
                                </DataTrigger.EnterActions>
                                <Setter TargetName="outerEllipse" Property="Source" Value="/KTouch.Controls;component/Themes/Resources/KTouchMenuRes/pictos stage etat_ON.png"/>
                            </DataTrigger>
                            <DataTrigger Binding="{Binding IsSelected, RelativeSource={RelativeSource AncestorType={x:Type ListBoxItem}}}" Value="False">
                                <Setter TargetName="outerEllipse" Property="Source" Value="/KTouch.Controls;component/Themes/Resources/KTouchMenuRes/pictos stage etat_OFF.png"/>
                            </DataTrigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- PathListBoxItem style-->
        <Style x:Key="PathListBoxItemStyle1" TargetType="{x:Type ec:PathListBoxItem}">
            <Setter Property="HorizontalContentAlignment" Value="Left"/>
            <Setter Property="VerticalContentAlignment" Value="Top"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ec:PathListBoxItem}">
                        <ControlTemplate.Resources>
                            <Storyboard x:Key="OnSelected1"/>
                        </ControlTemplate.Resources>
                        <Grid Background="{TemplateBinding Background}" RenderTransformOrigin="0.5,0.5">
                            <Grid.RenderTransform>
                                <TransformGroup>
                                    <ScaleTransform>
                                        <ScaleTransform.ScaleY>
                                            <Binding Path="IsArranged" RelativeSource="{RelativeSource TemplatedParent}">
                                                <Binding.Converter>
                                                    <ec:IsArrangedToScaleConverter/>
                                                </Binding.Converter>
                                            </Binding>
                                        </ScaleTransform.ScaleY>
                                        <ScaleTransform.ScaleX>
                                            <Binding Path="IsArranged" RelativeSource="{RelativeSource TemplatedParent}">
                                                <Binding.Converter>
                                                    <ec:IsArrangedToScaleConverter/>
                                                </Binding.Converter>
                                            </Binding>
                                        </ScaleTransform.ScaleX>
                                    </ScaleTransform>
                                    <SkewTransform/>
                                    <RotateTransform Angle="{Binding OrientationAngle, RelativeSource={RelativeSource TemplatedParent}}"/>
                                    <TranslateTransform/>
                                </TransformGroup>
                            </Grid.RenderTransform>
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CommonStates">
                                    <VisualState x:Name="Normal"/>
                                    <VisualState x:Name="MouseOver"/>
                                    <VisualState x:Name="Disabled">
                                        <Storyboard>
                                            <DoubleAnimation Duration="0" To="0.55" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="contentPresenter"/>
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                                <VisualStateGroup x:Name="SelectionStates">
                                    <VisualState x:Name="Unselected"/>
                                    <VisualState x:Name="Selected"/>
                                </VisualStateGroup>
                                <VisualStateGroup x:Name="FocusStates">
                                    <VisualState x:Name="Focused"/>
                                    <VisualState x:Name="Unfocused"/>
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                            <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}"/>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

    </UserControl.Resources>

    <UserControl.Triggers>
        <EventTrigger RoutedEvent="FrameworkElement.Loaded" SourceName="pathListBox">
            <BeginStoryboard x:Name="MenuLoaded_BeginStoryboard" Storyboard="{StaticResource MenuLoaded}"/>
        </EventTrigger>
    </UserControl.Triggers>

    <Grid x:Name="LayoutRoot">
        <Ellipse x:Name="remote_fond2" Height="209" Width="209" StrokeThickness="20" HorizontalAlignment="Left" VerticalAlignment="Top"/>
        <Border Height="{Binding Height, ElementName=remote_fond2}" Width="{Binding Width, ElementName=remote_fond2}" HorizontalAlignment="Left" Margin="0,1,0,0" VerticalAlignment="Top" Background="{DynamicResource MenuFondBrush}">
            <ec:PathListBox x:Name="pathListBox" ItemContainerStyle="{DynamicResource PathListBoxItemStyle1}" HorizontalAlignment="Left" VerticalAlignment="Top">
                <ec:PathListBox.LayoutPaths>
                    <ec:LayoutPath SourceElement="{Binding ElementName=remote_fond2}" Padding="11" Capacity="4" Start="0.95"/>
                </ec:PathListBox.LayoutPaths>
                <Surface:SurfaceButton x:Name="internshipBtn" Tag="Stages" Style="{DynamicResource StagesBtnStyle}" />
                <Surface:SurfaceButton x:Name="realisationsBtn" Tag="Réalisations" Style="{DynamicResource RealisationsButtonStyle}"/>
                <Surface:SurfaceButton x:Name="solutionsBtn" Tag="Solutions" Style="{DynamicResource SolutionsBtnStyle}"/>
                <Surface:SurfaceButton x:Name="homeBtn" Tag="Accueil" Style="{DynamicResource HomeButtonStyle}"/>
            </ec:PathListBox>
        </Border>
    </Grid>
</UserControl>