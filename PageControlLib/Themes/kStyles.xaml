<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
					xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
					xmlns:s2="clr-namespace:Microsoft.Surface.Presentation.Generic;assembly=Microsoft.Surface.Presentation.Generic" 
					xmlns:Surface="http://schemas.microsoft.com/surface/2008" 
					xmlns:Units="clr-namespace:KTouch.Units;assembly=KTouch.Units"
					xmlns:ed="http://schemas.microsoft.com/expression/2010/drawing">

	<Units:MultiplicationConverter x:Key="mConverter"/>
	<Units:ItemTemplateSelector x:Key="itemTemplateSelector"/>
	<Style x:Key="NavigationButtonBaseStyle" TargetType="{x:Type Surface:SurfaceButton}">
		<Style.Resources>
            <Storyboard x:Key="StartDim">
				<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)">
					<EasingDoubleKeyFrame KeyTime="0" Value="1"/>
				</DoubleAnimationUsingKeyFrames>
			</Storyboard>
            <Storyboard x:Key="EndDim">
				<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)">
					<EasingDoubleKeyFrame KeyTime="0" Value="0.6"/>
				</DoubleAnimationUsingKeyFrames>
			</Storyboard>
		</Style.Resources>
		<Setter Property="Background" Value="Orange"/>
		<Setter Property="Opacity" Value="0.6"/>
		<Setter Property="RenderTransform">
			<Setter.Value>
				<TransformGroup>
					<ScaleTransform/>
				</TransformGroup>
			</Setter.Value>
		</Setter>
		<Setter Property="RenderTransformOrigin" Value="0.5,0.5"/>
		<Style.Triggers>
			<Trigger Property="IsPressed" Value="True">
				<Trigger.EnterActions>
					<BeginStoryboard Storyboard="{StaticResource Select}" />
				</Trigger.EnterActions>
				<Trigger.ExitActions>
					<BeginStoryboard Storyboard="{StaticResource Unselect}" />
				</Trigger.ExitActions>
			</Trigger>
			<Trigger Property="IsEnabled" Value="True">
				<Trigger.EnterActions>
					<BeginStoryboard Storyboard="{StaticResource StartDim}"/>
				</Trigger.EnterActions>
				<Trigger.ExitActions>
					<BeginStoryboard Storyboard="{StaticResource EndDim}"/>
				</Trigger.ExitActions>
			</Trigger>
		</Style.Triggers>
	</Style>

	<Style x:Key="NavigationButtonLeftStyle" 
		   TargetType="{x:Type Surface:SurfaceButton}" 
		   BasedOn="{StaticResource NavigationButtonBaseStyle}">
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type Surface:SurfaceButton}">
					<ControlTemplate.Resources>
					
					</ControlTemplate.Resources>
					<Grid>
						<ed:BlockArrow Fill="{TemplateBinding Background}" 
									   Opacity="{TemplateBinding Opacity}" 
									   Orientation="Left"  
									   Stroke="{TemplateBinding BorderBrush}"/>
						<s2:SurfaceShadowChrome x:Name="surfaceShadowChrome" 
												Style="{DynamicResource ShadowChromeStyle}"/>
					</Grid>
					<ControlTemplate.Triggers>
						<Trigger Property="IsPressed"
									 Value="True">
							<Trigger.EnterActions>
								<BeginStoryboard Storyboard="{StaticResource GlowPress}"/>
							</Trigger.EnterActions>
							<Trigger.ExitActions>
								<BeginStoryboard Storyboard="{StaticResource GlowRelease}" />
							</Trigger.ExitActions>
						</Trigger>
					</ControlTemplate.Triggers>

				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<Style x:Key="NavigationButtonRightStyle" 
		   TargetType="{x:Type Surface:SurfaceButton}" 
		   BasedOn="{StaticResource NavigationButtonBaseStyle}">
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type Surface:SurfaceButton}">
					<Grid>
						<ed:BlockArrow Fill="{TemplateBinding Background}" 
									   Opacity="{TemplateBinding Opacity}" 
									   Orientation="Right"  
									   Stroke="{TemplateBinding BorderBrush}"/>
						<s2:SurfaceShadowChrome x:Name="surfaceShadowChrome" 
												Style="{DynamicResource ShadowChromeStyle}"/>
					</Grid>
					<ControlTemplate.Triggers>
						<Trigger Property="IsPressed"
									 Value="True">
							<Trigger.EnterActions>
								<BeginStoryboard Storyboard="{StaticResource GlowPress}"/>
							</Trigger.EnterActions>
							<Trigger.ExitActions>
								<BeginStoryboard Storyboard="{StaticResource GlowRelease}" />
							</Trigger.ExitActions>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<Style x:Key="NavigationButtonExitStyle" 
		   TargetType="{x:Type Surface:SurfaceButton}" 
		   BasedOn="{StaticResource NavigationButtonBaseStyle}">
		<Setter Property="Margin" Value="5"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type Surface:SurfaceButton}">
					<Grid>
						<Path Data="M480,224 L463.5,239.5 439.5,215.5 415.5,239.5 399.5,223.5 423.5,199.5 399.5,175.5 415.5,159.5 439.5,183.5 463.5,159.5 479.5,175.5 455.5,199.5 z"
							  Stretch="Fill" 
							  Fill="{TemplateBinding Background}" 
							  Opacity="{TemplateBinding Opacity}" 
							  Stroke="{TemplateBinding BorderBrush}"/>
						<s2:SurfaceShadowChrome x:Name="surfaceShadowChrome" 
												Style="{DynamicResource ShadowChromeStyle}"/>
					</Grid>
					<ControlTemplate.Triggers>
						<Trigger Property="IsPressed"
									 Value="True">
							<Trigger.EnterActions>
								<BeginStoryboard Storyboard="{StaticResource GlowPress}"/>
							</Trigger.EnterActions>
							<Trigger.ExitActions>
								<BeginStoryboard Storyboard="{StaticResource GlowRelease}" />
							</Trigger.ExitActions>
						</Trigger>
					</ControlTemplate.Triggers>

				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<Style x:Key="DefaultListBoxItemStyle" TargetType="{x:Type Surface:SurfaceListBoxItem}">
		<Setter Property="ClipToBounds" Value="False"/>
		<Setter Property="Margin" Value="20"/>
		<Setter Property="BorderThickness" Value="0"/>
		<Setter Property="HorizontalAlignment" Value="Center"/>
		<Setter Property="HorizontalContentAlignment" Value="Center"/>
		<Setter Property="Background" Value="White"/>
		<Setter Property="Foreground" Value="Orange"/>
		<Setter Property="FontFamily" Value="Arial"/>
		<Setter Property="FontSize" Value="22"/>
		<Setter Property="FontWeight" Value="Bold"/>
		<Setter Property="RenderTransform">
			<Setter.Value>
				<TransformGroup>
					<ScaleTransform/>
				</TransformGroup>
			</Setter.Value>
		</Setter>
		<Setter Property="RenderTransformOrigin" Value="0.5,0.5"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type Surface:SurfaceListBoxItem}">
					<Grid x:Name="mainBorder">
						<!-- Rounded mask (stretches to fill Grid) -->
						<Border Name="mask" CornerRadius="10" Background="{TemplateBinding Background}"></Border>
						<!-- Main content container -->
						<Border x:Name="itemBorder" Padding="5">
							<!-- Use a VisualBrush of 'mask' as the opacity mask -->
							<!--<Border.OpacityMask>
								<VisualBrush Visual="{Binding ElementName=mask}"/>
							</Border.OpacityMask>-->
							<ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
						</Border>
						<s2:SurfaceShadowChrome x:Name="surfaceShadowChrome" 
												Style="{DynamicResource ShadowChromeStyle}"/>
					</Grid>
					<ControlTemplate.Triggers>
						<Trigger Property="IsPressed"
									 Value="True">
							<Trigger.EnterActions>
								<BeginStoryboard Storyboard="{StaticResource GlowPress}"/>
							</Trigger.EnterActions>
							<Trigger.ExitActions>
								<BeginStoryboard Storyboard="{StaticResource GlowRelease}" />
							</Trigger.ExitActions>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
		<Style.Triggers>
			<Trigger Property="IsSelected" Value="True">
				<Setter Property="Background" Value="Orange" />
				<Setter Property="Foreground" Value="White"/>
				<Trigger.EnterActions>
					<BeginStoryboard Storyboard="{StaticResource Select}" />
				</Trigger.EnterActions>
				<Trigger.ExitActions>
					<BeginStoryboard Storyboard="{StaticResource Unselect}" />
				</Trigger.ExitActions>
			</Trigger>
		</Style.Triggers>
	</Style>

	<Style x:Key="TagListBoxItemStyle" 
			   TargetType="{x:Type Surface:SurfaceListBoxItem}" 
			   BasedOn="{StaticResource DefaultListBoxItemStyle}">
		<Style.Triggers>
			<Trigger Property="IsSelected" Value="True">
				<Setter Property="Background" Value="Orange" />
				<Setter Property="Foreground" Value="White"/>
			</Trigger>
		</Style.Triggers>
	</Style>
	
   <Style x:Key="OverlayListBoxItemStyle" 
			   TargetType="{x:Type Surface:SurfaceListBoxItem}" 
			   BasedOn="{StaticResource DefaultListBoxItemStyle}">
        <Setter Property="Margin" Value="5"/>
    </Style>

    <Style x:Key="WarpPanelListBoxItemStyle" 
			   TargetType="{x:Type Surface:SurfaceListBoxItem}" 
			   BasedOn="{StaticResource DefaultListBoxItemStyle}">
    </Style>

    <Style x:Key="DefaultListBoxStyle" TargetType="{x:Type Surface:SurfaceListBox}">
		<Setter Property="Background" Value="Transparent"/>
		<Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
		<Setter Property="ClipToBounds" Value="False"/>
		<Setter Property="ItemContainerStyle" Value="{StaticResource DefaultListBoxItemStyle}"/>
		<Setter Property="ItemTemplateSelector" Value="{StaticResource itemTemplateSelector}"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type Surface:SurfaceListBox}">
					<Surface:SurfaceScrollViewer HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Disabled">
                        <WrapPanel ItemHeight="Auto" ItemWidth="300" Orientation="Horizontal"  IsItemsHost="True" ClipToBounds="False" />
                    </Surface:SurfaceScrollViewer>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>


    <Style x:Key="FrontPageListBox" TargetType="{x:Type Surface:SurfaceListBox}" BasedOn="{StaticResource DefaultListBoxStyle}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Surface:SurfaceListBox}">
                    <Surface:SurfaceScrollViewer HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Disabled">
                        <WrapPanel ItemHeight="300" ItemWidth="300" Orientation="Horizontal"  IsItemsHost="True" ClipToBounds="False" />
                    </Surface:SurfaceScrollViewer>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="OverlayListBoxStyle" TargetType="{x:Type Surface:SurfaceListBox}" BasedOn="{StaticResource DefaultListBoxStyle}">
        <Setter Property="ItemContainerStyle" Value="{StaticResource OverlayListBoxItemStyle}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Surface:SurfaceListBox}">
                    <Surface:SurfaceScrollViewer HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Disabled">
                        <WrapPanel Orientation="Horizontal" ItemHeight="100" ItemWidth="100" IsItemsHost="True" ClipToBounds="False" />
                    </Surface:SurfaceScrollViewer>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="WarpPanelListBox" TargetType="{x:Type Surface:SurfaceListBox}" BasedOn="{StaticResource DefaultListBoxStyle}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Surface:SurfaceListBox}">
                    <Surface:SurfaceScrollViewer HorizontalScrollBarVisibility="Disabled">
                        <WrapPanel ItemHeight="300" ItemWidth="300" Orientation="Horizontal"  IsItemsHost="True" ClipToBounds="False" />
                    </Surface:SurfaceScrollViewer>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <DataTemplate x:Key="ImageData">
		<Image Source="{Binding CoverFile}"/>
	</DataTemplate>
	
	<Style x:Key="XpsListBoxStyle" 
		   TargetType="{x:Type Surface:SurfaceListBox}"
		   BasedOn="{StaticResource DefaultListBoxStyle}">
		<Setter Property="ItemTemplate" Value="{StaticResource ImageData}"/>
	</Style>

	<Style x:Key="TagListBoxStyle" TargetType="{x:Type Surface:SurfaceListBox}"
		   BasedOn="{StaticResource DefaultListBoxStyle}">
		<Setter Property="ItemContainerStyle" Value="{StaticResource TagListBoxItemStyle}"/>
	</Style>
	
	<!--<Style x:Key="OverlayListBoxStyle" 
		   TargetType="{x:Type Surface:SurfaceListBox}"
		   BasedOn="{StaticResource XpsListBoxStyle}">
		<Setter Property="ItemContainerStyle" Value="{StaticResource OverlayListBoxItemStyle}"/>
	</Style>-->
</ResourceDictionary>